import Head from "next/head";
import { fetchData } from "@/services/http";
import { MovieResponseType } from "@/types/media";
import { GetStaticProps } from "next";
import { HomeLayout } from "@/components/Layout/HomeLayout";
import { useRouter } from "next/router";
import { SearchLayout } from "@/components/Layout/SearchLayout";

interface HomeProps {
  popularMovies: MovieResponseType;
  trendingMedia: MovieResponseType;
  latestTVShows: MovieResponseType;
  topRatedTVShows: MovieResponseType;
  topRatedMovies: MovieResponseType;
}

export default function Home(props: HomeProps): JSX.Element {
  const {
    popularMovies,
    trendingMedia,
    latestTVShows,
    topRatedTVShows,
    topRatedMovies,
  } = props;

  const router = useRouter();
  console.log(router.query);

  return (
    <>
      <Head>
        <title>Netflix Clone</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {!router.query.query ? (
        <HomeLayout
          coverId={popularMovies.results[0].id}
          coverImage={popularMovies.results[0].poster_path}
          coverTitle={popularMovies.results[0].title}
          coverOverview={popularMovies.results[0].overview}
          trendingMedia={trendingMedia}
          popularMovies={popularMovies}
          latestTVShows={latestTVShows}
          topRatedTVShows={topRatedTVShows}
          topRatedMovies={topRatedMovies}
        />
      ) : (
        <SearchLayout />
      )}
    </>
  );
}

export const getStaticProps: GetStaticProps = async (context: any) => {
  const popularMovies: MovieResponseType = await fetchData(
    `/movie/popular?api_key=${process.env.NEXT_PUBLIC_API_KEY}&language=en-US&page=1`
  );
  const trendingMedia: MovieResponseType = await fetchData(
    `/trending/all/day?api_key=${process.env.NEXT_PUBLIC_API_KEY}&language=en-US&page=1`
  );
  const latestTVShows: MovieResponseType = await fetchData(
    `/tv/on_the_air?api_key=${process.env.NEXT_PUBLIC_API_KEY}&language=en-US&page=1`
  );
  const topRatedTVShows: MovieResponseType = await fetchData(
    `/tv/top_rated?api_key=${process.env.NEXT_PUBLIC_API_KEY}&language=en-US&page=1`
  );
  const topRatedMovies: MovieResponseType = await fetchData(
    `/movie/top_rated?api_key=${process.env.NEXT_PUBLIC_API_KEY}&language=en-US&page=1`
  );

  return {
    props: {
      popularMovies,
      trendingMedia,
      latestTVShows,
      topRatedTVShows,
      topRatedMovies,
    },
  };
};
